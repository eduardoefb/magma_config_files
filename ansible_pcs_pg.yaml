-
   name: Update Centos
   hosts: ALL
   remote_user: root   
   tasks:
             
     - name: Update system
       yum:
          name: '*'
          state: 'latest'
          
     - name: Disable IPV6        
       shell:
         echo "net.bridge.bridge-nf-call-ip6tables = 1" > /etc/sysctl.d/k8s.conf;
         echo "net.bridge.bridge-nf-call-iptables = 1" >> /etc/sysctl.d/k8s.conf;          

     - name: Reboot after update
       reboot:
         msg: "Reboot triggered by Ansible"
         reboot_timeout: 360

     - name: Install nfs packages
       yum:
          name: "{{ packages }}"
       vars:
          packages:
             - nfs-utils
             - wget
- 
   name: Install dns and pcsd
   hosts: MASTER
   remote_user: root   
   tasks:

     - name: Install master specific packages
       yum:
          name: "{{ packages }}"
       vars:
          packages:
             - bind
             - bind-utils
             - pcs
             - corosync
             - pacemaker             
             
     - name: Enable rpcbind
       systemd:
         name: rpcbind
         enabled: yes
         masked: no    

     - name: Enable nfs-server
       systemd:
         name: nfs-server
         enabled: yes
         masked: no   
                 
     - name: Enable nfs-lock
       systemd:
         name: nfs-lock
         enabled: yes
         masked: no                   

     - name: Enable nfs-idmap 
       systemd:
         name: nfs-idmap 
         enabled: yes
         masked: no          
         
     - name: Enable pcsd
       systemd:
         name: pcsd
         enabled: yes
         masked: no                
          
     - name: Enable corosync
       systemd:
         name: corosync
         enabled: yes
         masked: no  

     - name: Enable pacemaker
       systemd:
         name: pacemaker
         enabled: yes
         masked: no   
                                      
     - name: Configure bind 
       shell:
         sed -i "s/listen-on port 53 { 127.0.0.1; };/listen-on port 53 { 127.0.0.1; $(ip addr show dev eth0 | grep -oP '(?<=inet )(.*)(?=\/)'); };/g" /etc/named.conf;
         sed -i 's/allow-query     { localhost; };/allow-query     { localhost; 0.0.0.0\/0; };/g'  /etc/named.conf;
       args:
         warn: no

     - name: Enable Bind
       systemd:
         name: named
         enabled: yes
         masked: no
         
     - name: Configure NFS part 1
       file:
         path: /srv/k8s_volume
         state: directory
         mode: '0755'
      
     - name: Configure NFS part 2
       shell:
         echo "/srv/k8s_volume #NETWORK#/24(rw,no_root_squash,subtree_check)" >> /etc/exports
       args:
         warn: no
                    
     - name: Reboot after BIND and NFS configuration
       reboot:
         msg: "Reboot triggered by Ansible"
         reboot_timeout: 360
     
     - name: Define hacluster password
       shell:
          echo "#PWD#" | passwd --stdin hacluster
          
     - name: Install other packages
       shell:
          yum install -y https://yum.postgresql.org/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm ;
          yum install -y postgresql96 postgresql96-contrib postgresql96-server pacemaker resource-agents resource-agents-paf pcs fence-agents-all fence-agents-virsh;
       args:
          warn: no
       
         
- 
   name: Configure cluster
   hosts: MASTER01
   remote_user: root   
   tasks:
     - name: Create and Configure the Cluster
       shell:
          pcs cluster auth #MASTER_NODE_IP01# #MASTER_NODE_IP02# -u hacluster -p "#PWD#";
          pcs cluster setup --name master-vip #MASTER_NODE_IP01# #MASTER_NODE_IP02#;
          pcs cluster start --all;
          pcs cluster enable --all;
          pcs property set stonith-enabled=false;
          pcs property set no-quorum-policy=ignore;
          pcs property list;
          pcs resource create master_ha ocf:heartbeat:IPaddr2 ip=#MASTER_NODE_HIP# cidr_netmask=24 nic=eth0 op monitor interval=30s;
          pcs cluster stop --all;
          pcs cluster start --all
          
       args:
          warn: no
     
     - name: Configure psql
       shell:
          /usr/pgsql-9.6/bin/postgresql96-setup initdb;
          echo "listen_addresses = '*'" >> /var/lib/pgsql/9.6/data/postgresql.conf;
          echo "wal_level = replica" >> /var/lib/pgsql/9.6/data/postgresql.conf;
          echo "max_wal_senders = 10" >> /var/lib/pgsql/9.6/data/postgresql.conf;
          echo "hot_standby = on" >> /var/lib/pgsql/9.6/data/postgresql.conf;
          echo "hot_standby_feedback = on" >> /var/lib/pgsql/9.6/data/postgresql.conf;          
          echo "host replication postgres #MASTER_NODE_IP01#/32 reject" >> /var/lib/pgsql/9.6/data/pg_hba.conf;
          echo "host replication postgres 0.0.0.0/0 trust" >> /var/lib/pgsql/9.6/data/pg_hba.conf; 
          echo "host all all #NETWORK#/#NETMASK_LEN# md5" >> /var/lib/pgsql/9.6/data/pg_hba.conf;
          echo "standby_mode = on" > /var/lib/pgsql/9.6/data/recovery.conf.pcmk;
          echo "primary_conninfo = 'host=#MASTER_NODE_IP01# application_name=$(hostname -s)'" >> /var/lib/pgsql/9.6/data/recovery.conf.pcmk;
          echo "recovery_target_timeline = 'latest'" >> /var/lib/pgsql/9.6/data/recovery.conf.pcmk;
          chown -r postgres:postgres /var/lib/pgsql/9.6/data/;
          systemctl enable postgresql-9.6;
          systemctl start postgresql-9.6;                
       args:
          warn: no
          
- 
   name: Configure master 2
   hosts: MASTER02
   remote_user: root   
   tasks:
     - name: Pause 30
       shell:
          sleep 30
       args:
          warn: no
     
     - name: Configure master 2 part 1
       shell:
          su - postgres -c 'pg_basebackup -h #MASTER_NODE_HIP# -D ~postgres/9.6/data/ -X stream -P'
       args:
          warn: no

     - name: Configure master 2 part 2
       shell:
          sed -ri s/srv[0-9]+/$(hostname -s)/ /var/lib/pgsql/9.6/data/pg_hba.conf;
       args:
          warn: no

     - name: Configure master 2 part 3
       shell:
          sed -ri s/srv[0-9]+/$(hostname -s)/ /var/lib/pgsql/9.6/data/recovery.conf.pcmk;
       args:
          warn: no

     - name: Configure master 2 part 4
       shell:
          cp /var/lib/pgsql/9.6/data/recovery.conf.pcmk /var/lib/pgsql/9.6/data/recovery.conf;
       args:
          warn: no
          
     - name: Configure master 2 part 5
       shell:
          chown -R postgres:postgres /var/lib/pgsql/9.6/data/;
       args:
          warn: no

     - name: Configure master 2 part 6
       shell:
          systemctl enable postgresql-9.6;
       args:
          warn: no

     - name: Configure master 2 part 7
       shell:
          systemctl start postgresql-9.6;
       args:
          warn: no
